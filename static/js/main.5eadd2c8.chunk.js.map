{"version":3,"sources":["components/UseReducer/UseReducer.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","UseReducer","useReducer","count","dispatch","console","log","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAIMA,EAAU,SAACC,EAAOC,GACtB,OAAOA,GACL,IAAK,YAAa,OAAOD,EAAQ,EACjC,IAAK,YAAa,OAAOA,EAAQ,EACjC,IAAK,QAAS,OANG,EAOjB,QAAS,OAAOA,IAIPE,EAAa,WAAO,IAAD,EACFC,qBAAWJ,EAZpB,GAWW,mBACtBK,EADsB,KACfC,EADe,KAG9B,OADAC,QAAQC,IAAI,qBAEV,gCACE,8BAAMH,IACN,wBAAQI,QAAS,kBAAMH,EAAS,cAAhC,uBACA,wBAAQG,QAAS,kBAAMH,EAAS,cAAhC,uBACA,wBAAQG,QAAS,kBAAMH,EAAS,UAAhC,uBCVSI,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAKE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5eadd2c8.chunk.js","sourcesContent":["import React, { useReducer} from 'react'\n\nconst initialState = 0\n\nconst reducer = (state, action) => {\n  switch(action) {\n    case 'increment': return state + 1\n    case 'decrement': return state - 1\n    case 'reset': return initialState\n    default: return state\n  }\n}\n\nexport const UseReducer = () => {\n  const [ count, dispatch ] = useReducer(reducer, initialState)\n  console.log('UseReducer Render')\n  return (\n    <div>\n      <div>{count}</div>\n      <button onClick={() => dispatch('increment')}>Increment</button>\n      <button onClick={() => dispatch('decrement')}>Decrement</button>\n      <button onClick={() => dispatch('reset')}>Reset</button>\n    </div>\n  )\n}","import './App.css';\nimport { UseReducer } from './components/UseReducer/UseReducer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UseReducer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <iframe allowfullscreen=\"\"\n      src=\"https://app.getbeamer.com/news?app_id=XgEuIeNv37711\"\n      id=\"beamerNews\"\n    ></iframe> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}